<!-- ðŸŽ¥ Fullscreen Video Background -->
<video autoplay muted loop playsinline class="bg-video">
  <source src="/videos/background.mp4" type="video/mp4" />
  Your browser does not support the video tag.
</video>

<!-- Main Content Container -->
<div class="main-content">
  <!-- Login Section -->
  <div class="login-container">
    <div class="auth-card">
      <!-- Auth Logo (at the top now) -->
      <div class="auth-logo-header">
        <div class="logo-container">
          <i class="fas fa-globe-americas"></i>
        </div>
        <h2 class="welcome-text">Welcome Back</h2>
        <p class="auth-subtitle">Track, share, and relive your global adventures</p>
      </div>
      
      <div class="auth-card-body">
        <!-- Error message container, hidden by default -->
        <div id="error-message" class="form-error" style="display: none;">
          <i class="fas fa-exclamation-circle me-2"></i>
          <span id="error-text">{{#if message}}{{message}}{{/if}}</span>
        </div>

        <!-- âœ… Success message container -->
        <div id="success-message" class="form-success" style="display: none;">
          <i class="fas fa-check-circle me-2"></i>
          Your account was created successfully. Please log in.
        </div>
        
        <form id="login-form" method="POST" action="/login">
          <div class="form-group">
            <label for="username">
              <i class="fas fa-user text-glow-icon me-2"></i>Username
            </label>
            <input type="text" name="username" id="username" placeholder="Enter your username" required />
          </div>

          <div class="form-group">
            <label for="password">
              <i class="fas fa-lock text-glow-icon me-2"></i>Password
            </label>
            <input type="password" name="password" id="password" placeholder="Enter your password" required />
          </div>

          <button type="submit" class="btn-add-trip w-100">
            <i class="fas fa-sign-in-alt me-2"></i>Sign In
          </button>
        </form>

        
        <div class="separator">
          <span>OR</span>
        </div>
        
        <p class="text-center register-prompt">
          New to Map Mosaic? <a href="/register" class="accent-link">Create an account</a>
        </p>
      </div>
    </div>
  </div>
</div>

<style>
  html, body {
    height: 100%;
    margin: 0;
    padding: 0;
  }

  .bg-video {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    object-fit: cover;
    z-index: -1;
    filter: blur(10px) brightness(0.4);
    opacity: 0.85;
    pointer-events: none;
  }
  
  .main-content {
    min-height: calc(100vh - 60px); /* Adjust based on your header height */
    display: flex;
    flex-direction: column;
  }

  .login-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 1; /* This makes it take available space */
    padding: 2rem 1rem;
    position: relative;
    z-index: 3;
  }

  .auth-card {
    background: rgba(25, 25, 25, 0.85);
    border-radius: 1.5rem;
    overflow: hidden;
    backdrop-filter: blur(5px);
    border: 1px solid rgba(56, 239, 125, 0.1);
    box-shadow: 0 12px 32px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(56, 239, 125, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    width: 100%;
    max-width: 450px;
    animation: fadeInUp 0.8s ease-out forwards;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Fade in animation for error message */
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .auth-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 16px 40px rgba(0, 0, 0, 0.4), 0 0 0 1px rgba(56, 239, 125, 0.2);
  }

  /* Rounded header with logo */
  .auth-logo-header {
    background: linear-gradient(135deg, rgba(31, 31, 31, 0.95), rgba(17, 17, 17, 0.95));
    padding: 3rem 1.5rem 2rem;
    text-align: center;
    border-bottom: 1px solid rgba(56, 239, 125, 0.1);
    position: relative;
    overflow: hidden;
    border-radius: 1.5rem 1.5rem 0 0;
  }
  
  .auth-logo-header::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(to right, #38ef7d, #11998e);
    border-radius: 1.5rem 1.5rem 0 0;
  }
  
  .logo-container {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(56, 239, 125, 0.1), rgba(17, 153, 142, 0.1));
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 1.25rem;
    border: 1px solid rgba(56, 239, 125, 0.2);
    box-shadow: 0 0 20px rgba(56, 239, 125, 0.3);
  }
  
  .auth-logo-header i {
    font-size: 2.8rem;
    background: linear-gradient(to right, #38ef7d, #11998e);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    filter: drop-shadow(0 0 10px rgba(56, 239, 125, 0.4));
  }
  
  .welcome-text {
    color: #eaffea;
    font-weight: 600;
    font-size: 1.75rem;
    margin: 0 0 0.5rem;
    text-shadow: 0 0 15px rgba(56, 239, 125, 0.4);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }
  
  .auth-subtitle {
    color: #aaa;
    margin-bottom: 0;
    font-size: 0.95rem;
    opacity: 0.9;
    font-style: italic;
  }

  .auth-card-body {
    padding: 2rem;
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-group label {
    display: flex;
    align-items: center;
    font-weight: 600;
    color: #d8f2e0;
    margin-bottom: 0.5rem;
    font-size: 0.95rem;
  }

  .form-group input {
    width: 100%;
    background-color: #2a2a2a;
    border: 1px solid #444;
    color: #fff;
    border-radius: 0.7rem;
    padding: 0.75rem 1rem;
    font-size: 1rem;
    transition: all 0.3s ease;
  }

  .form-group input:focus {
    border-color: #38ef7d;
    box-shadow: 0 0 0 0.2rem rgba(56, 239, 125, 0.25);
    background-color: #2d2d2d;
    outline: none;
  }

  .form-group input::placeholder {
    color: #aaa;
    opacity: 1;
  }

  .form-error {
    background-color: rgba(220, 53, 69, 0.1);
    color: #ff6b6b;
    padding: 0.75rem 1rem;
    border-radius: 0.7rem;
    margin-bottom: 1.5rem;
    border: 1px solid rgba(220, 53, 69, 0.2);
    display: flex;
    align-items: center;
    animation: fadeIn 0.3s ease-out forwards;
  }

  /* Loading state for button */
  .btn-loading {
    position: relative;
    pointer-events: none;
    color: transparent !important;
  }

  .btn-loading:after {
    content: "";
    position: absolute;
    width: 1rem;
    height: 1rem;
    top: calc(50% - 0.5rem);
    left: calc(50% - 0.5rem);
    border: 2px solid #000;
    border-radius: 50%;
    border-top-color: transparent;
    animation: spin 0.8s linear infinite;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  /* Shake animation for form errors */
  @keyframes shake {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
    20%, 40%, 60%, 80% { transform: translateX(5px); }
  }

  .shake {
    animation: shake 0.5s ease-in-out;
  }

  /* Button */
  .btn-add-trip {
    background: linear-gradient(to right, #38ef7d, #11998e);
    border: none;
    color: #000000;
    font-weight: 600;
    padding: 0.7rem 1.2rem;
    border-radius: 2rem;
    transition: all 0.3s ease-in-out;
    box-shadow: 0 2px 8px rgba(56, 239, 125, 0.15);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 1rem;
  }

  .btn-add-trip:hover {
    background: linear-gradient(to right, #11998e, #38ef7d);
    transform: scale(1.02);
    box-shadow: 0 4px 12px rgba(56, 239, 125, 0.3);
    color: #000000;
  }

  .btn-add-trip i {
    font-size: 1rem;
  }

  /* Separator */
  .separator {
    display: flex;
    align-items: center;
    text-align: center;
    margin: 1.5rem 0;
  }
  
  .separator::before,
  .separator::after {
    content: '';
    flex: 1;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .separator span {
    padding: 0 0.75rem;
    color: #888;
    font-size: 0.85rem;
  }
  
  .register-prompt {
    color: #ccc;
    font-size: 0.95rem;
    margin-bottom: 0;
  }

  .accent-link {
    color: #38ef7d;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .accent-link:hover {
    color: #66f29d;
    text-decoration: underline;
  }

  .form-success {
  background-color: rgba(40, 167, 69, 0.1);
  color: #6fdb97;
  padding: 0.75rem 1rem;
  border-radius: 0.7rem;
  margin-bottom: 1.5rem;
  border: 1px solid rgba(40, 167, 69, 0.2);
  display: flex;
  align-items: center;
  animation: fadeIn 0.3s ease-out forwards;
  font-weight: 500;
}
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const loginForm = document.getElementById('login-form');
    const submitButton = loginForm.querySelector('button[type="submit"]');
    const errorBox = document.getElementById('error-message');
    const errorText = document.getElementById('error-text');

    // âœ… Moved this to top-level so it runs immediately on load
    if (window.location.search.includes('registered=1')) {
      const successMsg = document.getElementById('success-message');
      if (successMsg) {
        successMsg.style.display = 'flex';
      }
    }

    loginForm.addEventListener('submit', function(e) {
      e.preventDefault();

      // Clear previous error
      errorText.innerText = '';
      errorBox.style.display = 'none';

      // Show loading
      submitButton.classList.add('btn-loading');

      const formData = new FormData(loginForm);
      const payload = new URLSearchParams(formData);

      fetch('/login', {
        method: 'POST',
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: payload
      })
      .then(res => {
        if (res.ok) return res.json();
        return res.json().then(err => Promise.reject(err));
      })
      .then(data => {
        window.location.href = data.redirect;
      })
      .catch(err => {
        let message = 'Login failed. Please try again.';
        if (err.errorType === 'user_not_found') {
          message = 'User not found. Please register.';
        } else if (err.errorType === 'wrong_password') {
          message = 'Incorrect password.';
        }

        errorText.innerText = message;
        errorBox.style.display = 'flex';
        submitButton.classList.remove('btn-loading');
        loginForm.classList.add('shake');
        setTimeout(() => loginForm.classList.remove('shake'), 500);
      });
    });
  });
</script>
