services:
  # Node.js Application
  app:
    build: .
    container_name: map-mosaic-app
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
    command: npm start  # Change if needed

  # PostgreSQL Database
  db:
    image: postgres:latest
    container_name: map-mosaic-db
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./src/init_data:/docker-entrypoint-initdb.d

volumes:
  pgdata:
#services:
#  db:
#    image: postgres:14
#    env_file: .env
#    expose:
#      - '5432'
#    volumes:
#      - lab-7-templating:/var/lib/postgresql/data
#      - ./init_data:/docker-entrypoint-initdb.d
#  web:
#    image: node:lts
#    user: 'node'
#    working_dir: /home/node/app
#    env_file: .env
#    environment:
#      POSTGRES_USER: group6
#      POSTGRES_PASSWORD: MapMosaic
#      POSTGRES_DB: map_mosaic
#    volumes:
#      - pgdata:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"

#  app:
#    build: .
#    container_name: mapmosaic_app
#    restart: always
#    depends_on:
#      - db
#    env_file:
#      - .env
#    ports:
#      - '3000:3000'
#    volumes:
#      - ./:/home/node/app
#    command: 'npm start'
# This defines our volume(s), which will persist throughout startups.
# If you want to get rid of a hanging volume, e.g. to test your database init,
# run `docker-compose rm -v`. Note that this will remove ALL of your data, so
# be extra sure you've made a stable backup somewhere.
#volumes:
#  lab-7-templating:
